import numpy as np
import pandas as pd

# Генерация обучающей выборки
def generate_dataset(num_samples):
    # Словарь для хранения пределов параметров для каждого класса растений
    parameters = {
        "Суккуленты": {
            "высота": (5, 30),
            "ширина": (5, 50),
            "скорость роста": (0.5, 2),
            "требования к поливу": (1, 3),
            "требования к освещённости": (7, 10),
            "требования к температуре": (10, 35),
            "требования к почве": (1, 3),
            "сезон цветения": (2, 6),
        },
        "Тропические растения": {
            "высота": (50, 200),
            "ширина": (30, 150),
            "скорость роста": (5, 20),
            "требования к поливу": (7, 10),
            "требования к освещённости": (5, 8),
            "требования к температуре": (18, 30),
            "требования к почве": (5, 8),
            "сезон цветения": (1, 12),
        },
        "Луковичные цветы": {
            "высота": (10, 80),
            "ширина": (5, 30),
            "скорость роста": (1, 5),
            "требования к поливу": (4, 6),
            "требования к освещённости": (6, 9),
            "требования к температуре": (5, 25),
            "требования к почве": (4, 7),
            "сезон цветения": (3, 6),
        },
        "Хвойные деревья": {
            "высота": (100, 500),
            "ширина": (50, 300),
            "скорость роста": (1, 3),
            "требования к поливу": (3, 6),
            "требования к освещённости": (6, 9),
            "требования к температуре": (-30, 20),
            "требования к почве": (3, 6),
            "сезон цветения": (4, 6),
        },
        "Травянистые многолетники": {
            "высота": (15, 100),
            "ширина": (10, 60),
            "скорость роста": (2, 10),
            "требования к поливу": (5, 8),
            "требования к освещённости": (5, 8),
            "требования к температуре": (5, 25),
            "требования к почве": (4, 7),
            "сезон цветения": (4, 9),
        },
        "Водные растения": {
            "высота": (10, 150),
            "ширина": (10, 100),
            "скорость роста": (2, 8),
            "требования к поливу": (10, 10),
            "требования к освещённости": (5, 9),
            "требования к температуре": (15, 30),
            "требования к почве": (1, 3),
            "сезон цветения": (6, 9),
        },
        "Декоративные кустарники": {
            "высота": (50, 300),
            "ширина": (50, 200),
            "скорость роста": (1, 5),
            "требования к поливу": (4, 7),
            "требования к освещённости": (5, 8),
            "требования к температуре": (5, 25),
            "требования к почве": (3, 7),
            "сезон цветения": (4, 7),
        },
        "Плодовые деревья": {
            "высота": (300, 1000),
            "ширина": (200, 600),
            "скорость роста": (3, 10),
            "требования к поливу": (6, 9),
            "требования к освещённости": (6, 9),
            "требования к температуре": (10, 35),
            "требования к почве": (4, 8),
            "сезон цветения": (3, 5),
        },
    }

    # Список для хранения данных об обучающей выборке
    data = []

    # Генерация данных для каждого класса растений
    for plant_class, params in parameters.items():
        for _ in range(num_samples):
            sample = {}
            for param, (min_val, max_val) in params.items():
                sample[param] = np.random.uniform(min_val, max_val)
            sample["plant_class"] = plant_class  # Добавление столбца с названием класса растения
            data.append(sample)

    # Создание DataFrame из сгенерированных данных
    df = pd.DataFrame(data)
    return df

# Генерация обучающей выборки размером 300
dataset = generate_dataset(1)

# Сохранение в формате Excel (xlsx)
with pd.ExcelWriter("C:\\TEST\\Laba1\\Neuroinformatics_Laba2\\Neuroinformatics_Laba2\\plant_dataset_fantastic.xlsx") as writer:
    dataset.to_excel(writer, index=False)
